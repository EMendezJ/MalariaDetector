clearvars;
clc;
% JORGE ALEJANDRO OLIVAS GLAUS
% 07-10-2024
% Movimiento circular uniforme con Método de Euler


% parametros del programa
h = 0.01; % Tamaño de paso
t0 = 0; %Tiempo inicial
t_end = 10; % Tiempo Final
n_steps = (t_end - t0)/h; %numero de pasos
a = 0.5; %Aceleración Centrípeta

% Condiciones Iniciales
x_0 = 2;
y_0 = 0;
Vx_0 = 0;
Vy_0 = 1;

% Iniciar arreglos
t = t0:h:t_end;
x = zeros(1, length(t));
y = zeros(1, length(t));
Vx = zeros(1, length(t));
Vy = zeros(1, length(t));

% Declarar condiciones iniciales en el arreglo
x(1) = x_0;
y(1) = y_0;
Vx(1) = Vx_0;
Vy(1) = Vy_0;

% Método Euler
for i = 1:n_steps
    dx = Vx(i);
    dy = Vy(i);
    dVx = -(a * x(i)) / sqrt(x(i)^2 + y(i)^2);
    dVy = -(a * y(i)) / sqrt(x(i)^2 + y(i)^2);

    % Metodo Euler
    x(i+1) = x(i) + h * dx;
    y(i+1) = y(i) + h * dy;
    Vx(i+1) = Vx(i) + h * dVx;
    Vy(i+1) = Vy(i) + h * dVy;
end

% Graficar soluciones
% Creamos arreglos de imagen
figure;
% Grafica x - y
subplot(3,1,1);
plot(x, y, 'b-');
title('x .vs. y');
xlabel('x');
ylabel('y');
grid on;

% Grafica x - t
subplot(3,1,2);
plot(t, x, 'r-');
title('x .vs. t');
xlabel('t');
ylabel('x');
grid on;

% Grafica y - t
subplot(3,1,3);
plot(t, y, 'g-');
title('y .vs. t');
xlabel('t');
ylabel('y');
grid on;